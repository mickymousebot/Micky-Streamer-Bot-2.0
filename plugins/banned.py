from utils import temp 
from database.users_db import db
from info import *
from pyrogram import Client, filters, enums
from pyrogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from pyrogram.errors.exceptions.bad_request_400 import MessageTooLong, PeerIdInvalid
from pyrogram.errors import ChatAdminRequired
import asyncio

#Dont Remove My Credit @Tech_Shreyansh
#This Repo Is By @SmartEdith_Bot 
# For Any Kind Of Error Ask Us In Support Group @Tech_Shreyansh2

@Client.on_message(filters.command('ban') & filters.user(ADMINS))
async def do_ban(bot ,  message):
    userid = message.text.split(" ", 2)[1] if len(message.text.split(" ", 1)) > 1 else None
    reason = message.text.split(" ", 2)[2] if len(message.text.split(" ", 2)) > 2 else None
    if not userid:
        return await message.reply('<b>·¥ò ü·¥á·¥Äs·¥á ·¥Ä·¥Ö·¥Ö ·¥Ä ·¥†·¥Ä ü…™·¥Ö ·¥ús·¥á Ä/·¥Ñ ú·¥Ä…¥…¥·¥á ü …™·¥Ö ·¥°…™·¥õ ú ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö\n\n·¥áx : /ban (user/channel_id) (banning reason[Optional]) \n Ä·¥á·¥Ä ü ·¥áx : <code>/ban 1234567899</code>\n·¥°…™·¥õ ú  Ä·¥á·¥Äs·¥è…¥ ·¥áx:<code>/ban 1234567899 seding adult links to bot</code>\n·¥õ·¥è  ô·¥Ä…¥ ·¥Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü :\n<code>/ban CHANEL_ID</code>\n·¥áx : <code>/ban -1001234567899</code></b>')
    text = await message.reply("<b> ü·¥á·¥õ ·¥ç·¥á ·¥Ñ ú·¥á·¥Ñ·¥ã üëÄ</b>")
    banSts = await db.ban_user(userid)
    if banSts == True:
        await text.edit(
    text=f"<b><code>{userid}</code>  ú·¥Äs  ô·¥á·¥á…¥  ô·¥Ä…¥…¥·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è\n\nS ú·¥è·¥ú ü·¥Ö I s·¥á…¥·¥Ö ·¥Ä…¥ ·¥Ä ü·¥á Ä·¥õ ·¥õ·¥è ·¥õ ú·¥á  ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Ä?</b>",
    reply_markup=InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(" è·¥ás ‚úÖ", callback_data=f"sendAlert_{userid}_{reason if reason else 'no reason provided'}"),
                InlineKeyboardButton("…¥·¥è ‚ùå", callback_data=f"noAlert_{userid}"),
            ],
        ]
    ),
)
    else:
        await text.edit(f"<b>C·¥è…¥·¥õ Ä·¥è ü ü  è·¥è·¥ú Ä ·¥Ä…¥…¢·¥á Ä  ô Ä·¥è...\n<code>{userid}</code> …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ô·¥Ä…¥…¥·¥á·¥Ö !!</b>")
    return

#Dont Remove My Credit @Tech_Shreyansh
#This Repo Is By @SmartEdith_Bot 
# For Any Kind Of Error Ask Us In Support Group @Tech_Shreyansh2

@Client.on_message(filters.command('unban') & filters.user(ADMINS))
async def do_unban(bot ,  message):
    userid = message.text.split(" ", 2)[1] if len(message.text.split(" ", 1)) > 1 else None
    if not userid:
        return await message.reply('…¢…™·¥†·¥á ·¥ç·¥á ·¥Ä…¥ …™·¥Ö\n·¥áx : <code>/unban 1234567899<code>')
    text = await message.reply("<b> ü·¥á·¥õ ·¥ç·¥á ·¥Ñ ú·¥á·¥Ñ·¥ã ü•±</b>")
    unban_chk = await db.is_unbanned(userid)
    if  unban_chk == True:
        await text.edit(text=f'<b><code>{userid}</code> …™s ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö\nS ú·¥è·¥ú ü·¥Ö I s·¥á…¥·¥Ö ·¥õ ú·¥á  ú·¥Ä·¥ò·¥ò è …¥·¥á·¥°s ·¥Ä ü·¥á Ä·¥õ ·¥õ·¥è ·¥õ ú·¥á ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Ä?</b>',
        reply_markup=InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(" è·¥ás ‚úÖ", callback_data=f"sendUnbanAlert_{userid}"),
                InlineKeyboardButton("…¥·¥è ‚ùå", callback_data=f"NoUnbanAlert_{userid}"),
            ],
        ]
    ),
)

    elif unban_chk==False:
        await text.edit('<b>·¥ús·¥á Ä …™s …¥·¥è·¥õ  ô·¥Ä…¥…¥·¥á·¥Ö  è·¥á·¥õ.</b>')
    else :
        await text.edit(f"<b>“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥ú…¥ ô·¥Ä…¥ ·¥ús·¥á Ä/·¥Ñ ú·¥Ä…¥…¥·¥á ü.\n Ä·¥á·¥Äs·¥è…¥ : {unban_chk}</b>")

#Dont Remove My Credit @Tech_Shreyansh
#This Repo Is By @SmartEdith_Bot 
# For Any Kind Of Error Ask Us In Support Group @Tech_Shreyansh2
